 GPIO Pin Configuration for STM32 and Raspberry Pi
MOSI: Raspberry Pi: P19	STM32: PB5
MISO: Raspberry Pi: P21	STM32: PB4
SS0: 	Raspberry Pi: P24	STM32: PA15
clock:  Raspberry Pi: P23	STM32: PB3


Instructions to Program the stm32
    1. Clone or download the zip from https://github.com/delaOrouen/sensorHubDen 
    2. From the terminal, navigate to the repository with the unpacked sensorHubDen
    3. type enter ‘make’ 
    4. Use st-flash to flash the code to the stm32

Notes: GPIO PC13 is toggled on and off because that pin is assumed to be connected to the onboard LED. This LED is “blinked” in the code as a way to confirm that the program is running an attempting to send data over the SPI GPIO connections. If the STM cannot be programmed with the code from the git code, then reconfigure the board in STM32cubemx. In STM32cubemx, under ‘connectivity’, enable SPI 1 as a full-duplex-slave, and enable hardware-nss-input-signal under hardware nss signal. Enagle RTC. Enable GPIO PC13 (or the gpio connected to the onboard led).

Instructions to Program the Raspberry Pi
    1. Type the following commands from the Balena CLI terminal to install the spidev library
        1. Sudo apt-get install python-dev python3-dev
        2. cd ~
        3. git clone https://github.com/doceme/py-spidev.git
        4. cd py-spydev
        5. make
        6. sudo make install
    2. Type these commands to install the code
        1. cd ~
        2. mkdir sensorHubPy
        3. git clone https://github.com/delaOrouen/sensorHubPy
        4. cd sensorHubPy
        5. chmod +x main.py
        6. ./main.py
    3. Now the program should be in an infinite loop (I’m not sure how to stop this loop…)
    4. Hopefully “hello world” is being printed to the terminal 
